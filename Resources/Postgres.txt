PostGres - Setup and config
 apt-get install postgresql-9.1 
 apt-get install postgresql-client
 apt-get install postgresql-contrib
 apt-get install pgadmin3 					-- only on the GUI client where we will manage the db from

 https://help.ubuntu.com/community/PostgreSQL
 -- also from command line

 sudo -u postgres psql postgres   -- run the psql command as the user postgres with the username postgres
 \password postgres     -- set password for postgres
 	- see notebook for pass. U ... 7
 CREATE EXTENSION adminpack;    -- for GUI admin
 Ctrl-D to exit

 sudo -u postgres createdb thydb

 Use pgAdmin to create goclient with minimum (login-only) powers


psql thydb -h localhost -U goclient

create table users(email varchar(64) not null UNIQUE, user_id char(5) not null UNIQUE, pass_hash char(60) not null, display_name varchar(70), primary key (user_id) );

create table journal_entries (user_id char(5) not null, je_time timestamp with time zone not null, je_text text, PRIMARY KEY (user_id, je_time));

create table metric_entries (user_id char(5) NOT NULL, me_id char(8) not null UNIQUE, me_time timestamp with time zone not null, me_action varchar(32) not null, me_description varchar(160), me_privacy int default 0, primary key ( me_id));

create table metric_details (me_id char(8) not null, d_type varchar(160), d_amount double precision, primary key (me_id, d_type));

-- amount and category can be null so don't key by them. 

create index user_email on users (email);
create index user_metrics on metric_entries (user_id);
create index user_metrics_time on metric_entries (user_id, me_time);
create index user_metrics_actions on metric_entries (user_id, me_action);
create index user_metrics_privacy on metric_entries (user_id, me_privacy);


alter table metric_entries ADD CONSTRAINT entry_on_user_deleted FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE;

alter table journal_entries ADD CONSTRAINT journal_on_user_deleted FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE;

alter table metric_details ADD CONSTRAINT detail_on_entry_deleted FOREIGN KEY (me_id) REFERENCES metric_entries(me_id) ON DELETE CASCADE;


-- ALTER TABLE users ADD COLUMN display_name varchar(70);
-- ALTER TABLE metric_details DROP COLUMN d_group
-- ALTER TABLE metric_entries ADD COLUMN me_privacy int default 0;

CREATE INDEX entry_privacy ON metric_entries (privacy)

-- 0 = public
-- 1 = private






misc
------------------
SELECT EXTRACT(EPOCH FROM '2011-03-27 00:59:000'::timestamp);

insert into users (email, user_id, pass_hash) values ('test@gmail.com', 'someu', 'somepass');

insert into metric_entries VALUES ('abcde', NOW(), 'meid', 'kung fu kick', 'some description goes here', ARRAY[ROW('somecat', 'sometype', 12)::detail, ROW('newcat', NULL, 32)::detail, ROW('finalcat', 'finaltype', NULL)::detail]);

Woooo... not multi-level queries. Just one, straight forward one. 
------
Email should just be used for initial auth. Userid should be used for everything else. 

Each detail Key, Value and Category has a length limit of 32 characters each. 


-------
USER_ID 5 chars
Entry_ID 8 chars
Detail
	- category - 32 char
	- type - 160 char
	- value - float64 
