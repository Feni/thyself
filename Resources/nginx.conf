user www-data;
worker_processes 4;
pid /var/run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
	use epoll;
	# optimizations from internet
multi_accept on;  # accept as many connections as possible

}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;  # attempt to send http response in one packet
	tcp_nodelay on; # don't buffer data sends. good for frquent small bursts
	keepalive_timeout 30;  # keep an open connection open longer
        keepalive_requests 1000; # requests per keep alive connection
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##

	

        log_format simplelog '$time_local [$remote_addr] "$request" $status ($request_time)';
	access_log /var/www/go/logs/nginx_access.log simplelog buffer=16k;
	error_log /var/www/go/logs/nginx_error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_http_version 1.1;
	gzip_comp_level 5;
	gzip_proxied any;
	gzip_min_length 11000;
	gzip_buffers 16 8k;
	gzip_types text/plain text/css application/x-javascript application/json text/xml application/xml application/xml+rss text/javascript;
	# disable on OLD ie
	gzip_disable "MSIE [1-6].(?!.*SV1)";
	gzip_vary on;

	##
	# nginx-naxsi config
	##
	# Uncomment it if you installed nginx-naxsi
	##

	#include /etc/nginx/naxsi_core.rules;

	##
	# nginx-passenger config
	##
	# Uncomment it if you installed nginx-passenger
	##
	
	#passenger_root /usr;
	#passenger_ruby /usr/bin/ruby;

	# Size Limits for DDOS paranoia
	client_body_buffer_size 8k;
	client_header_buffer_size 1k;
	client_max_body_size 64k;
	large_client_header_buffers 1 1k;


	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
# cache info about frequently accessed files
open_file_cache max=1000 inactive=30s;
open_file_cache_valid 60s;
open_file_cache_min_uses 2;
open_file_cache_errors on;



# free up nonresponsive connections
reset_timedout_connection on;

# send request timed out if body not loaded in this time
client_body_timeout 20s;

# if client stops reading data
send_timeout 2;



}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
